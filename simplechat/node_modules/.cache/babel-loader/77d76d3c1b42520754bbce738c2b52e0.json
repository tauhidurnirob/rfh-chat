{"ast":null,"code":"// Mostly copied from fbjs/packages/fbjs/src/core/shallowEqual.js\n// enhanced with keys cache as might get called multiple times with same args\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst CACHE = new WeakMap();\nexport default function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  if (Array.isArray(objA) && Array.isArray(objB)) {\n    // do array comparison\n    if (objA.length !== objB.length) {\n      return false;\n    }\n\n    for (let i = 0; i < objA.length; i++) {\n      if (objA[i] !== objB[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    // do object comparison\n    let keysA;\n\n    if (CACHE.has(objA)) {\n      keysA = CACHE.get(objA);\n    } else {\n      keysA = Object.keys(objA);\n      CACHE.set(objA, keysA);\n    }\n\n    let keysB;\n\n    if (CACHE.has(objB)) {\n      keysB = CACHE.get(objB);\n    } else {\n      keysB = Object.keys(objB);\n      CACHE.set(objB, keysB);\n    }\n\n    if (keysA.length !== keysB.length) {\n      return false;\n    } // Test for A's keys different from B.\n\n\n    for (let i = 0; i < keysA.length; i++) {\n      if (!hasOwnProperty.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}","map":{"version":3,"sources":["/Users/nirob/Desktop/rfh-chat/simplechat/node_modules/react-sweet-state/lib/esm/utils/shallow-equal.js"],"names":["hasOwnProperty","Object","prototype","CACHE","WeakMap","shallowEqual","objA","objB","Array","isArray","length","i","keysA","has","get","keys","set","keysB","call"],"mappings":"AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;AACA,MAAMG,KAAK,GAAG,IAAIC,OAAJ,EAAd;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAC/C,MAAID,IAAI,KAAKC,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAArC,IAA6C,OAAOC,IAAP,KAAgB,QAA7D,IAAyEA,IAAI,KAAK,IAAtF,EAA4F;AAC1F,WAAO,KAAP;AACD;;AAED,MAAIC,KAAK,CAACC,OAAN,CAAcH,IAAd,KAAuBE,KAAK,CAACC,OAAN,CAAcF,IAAd,CAA3B,EAAgD;AAC9C;AACA,QAAID,IAAI,CAACI,MAAL,KAAgBH,IAAI,CAACG,MAAzB,EAAiC;AAC/B,aAAO,KAAP;AACD;;AAED,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACI,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,UAAIL,IAAI,CAACK,CAAD,CAAJ,KAAYJ,IAAI,CAACI,CAAD,CAApB,EAAyB;AACvB,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD,GAbD,MAaO;AACL;AACA,QAAIC,KAAJ;;AAEA,QAAIT,KAAK,CAACU,GAAN,CAAUP,IAAV,CAAJ,EAAqB;AACnBM,MAAAA,KAAK,GAAGT,KAAK,CAACW,GAAN,CAAUR,IAAV,CAAR;AACD,KAFD,MAEO;AACLM,MAAAA,KAAK,GAAGX,MAAM,CAACc,IAAP,CAAYT,IAAZ,CAAR;AACAH,MAAAA,KAAK,CAACa,GAAN,CAAUV,IAAV,EAAgBM,KAAhB;AACD;;AAED,QAAIK,KAAJ;;AAEA,QAAId,KAAK,CAACU,GAAN,CAAUN,IAAV,CAAJ,EAAqB;AACnBU,MAAAA,KAAK,GAAGd,KAAK,CAACW,GAAN,CAAUP,IAAV,CAAR;AACD,KAFD,MAEO;AACLU,MAAAA,KAAK,GAAGhB,MAAM,CAACc,IAAP,CAAYR,IAAZ,CAAR;AACAJ,MAAAA,KAAK,CAACa,GAAN,CAAUT,IAAV,EAAgBU,KAAhB;AACD;;AAED,QAAIL,KAAK,CAACF,MAAN,KAAiBO,KAAK,CAACP,MAA3B,EAAmC;AACjC,aAAO,KAAP;AACD,KAtBI,CAsBH;;;AAGF,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,KAAK,CAACF,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,UAAI,CAACX,cAAc,CAACkB,IAAf,CAAoBX,IAApB,EAA0BK,KAAK,CAACD,CAAD,CAA/B,CAAD,IAAwCL,IAAI,CAACM,KAAK,CAACD,CAAD,CAAN,CAAJ,KAAmBJ,IAAI,CAACK,KAAK,CAACD,CAAD,CAAN,CAAnE,EAA+E;AAC7E,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;AACF","sourcesContent":["// Mostly copied from fbjs/packages/fbjs/src/core/shallowEqual.js\n// enhanced with keys cache as might get called multiple times with same args\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst CACHE = new WeakMap();\nexport default function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  if (Array.isArray(objA) && Array.isArray(objB)) {\n    // do array comparison\n    if (objA.length !== objB.length) {\n      return false;\n    }\n\n    for (let i = 0; i < objA.length; i++) {\n      if (objA[i] !== objB[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    // do object comparison\n    let keysA;\n\n    if (CACHE.has(objA)) {\n      keysA = CACHE.get(objA);\n    } else {\n      keysA = Object.keys(objA);\n      CACHE.set(objA, keysA);\n    }\n\n    let keysB;\n\n    if (CACHE.has(objB)) {\n      keysB = CACHE.get(objB);\n    } else {\n      keysB = Object.keys(objB);\n      CACHE.set(objB, keysB);\n    }\n\n    if (keysA.length !== keysB.length) {\n      return false;\n    } // Test for A's keys different from B.\n\n\n    for (let i = 0; i < keysA.length; i++) {\n      if (!hasOwnProperty.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}"]},"metadata":{},"sourceType":"module"}