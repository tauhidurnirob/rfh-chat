{"ast":null,"code":"var _jsxFileName = \"/Users/nirob/Desktop/rfh-chat/simplechat/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport classes from './Chat.module.css'; // import { useLiveQuery } from \"dexie-react-hooks\";\n\nimport db from './Dexie/db';\nimport InputField from './InputField';\nimport { useComments } from './SweetState/SweetState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = props => {\n  _s();\n\n  const [state, actions] = useComments();\n\n  const {\n    v4: uuidv4\n  } = require('uuid');\n\n  const commandQueqe = useRef([]);\n  const workerInstance = props.worker;\n\n  const handleKey = inputVal => {\n    let uuid = uuidv4();\n    let obj = {\n      type: 'DISCUSSION_COMMENT_ADD_COMMAND',\n      cmnt: inputVal,\n      uuid: uuid\n    };\n    workerInstance.postMessage({\n      op: 'add',\n      value: obj\n    });\n    commandQueqe.current.push(obj);\n    console.log(commandQueqe.current);\n  };\n\n  workerInstance.onmessage = e => {\n    let data = JSON.parse(e.data);\n    commandQueqe.current = commandQueqe.current.filter(f => f.uuid !== data.uuid);\n    db.comments.toArray().then(cmnts => {\n      actions.setStore(cmnts);\n    }).catch(error => {\n      alert(\"Ooops: \" + error);\n    });\n    console.log(data.cmnt);\n    console.log(commandQueqe.current);\n  }; // db.comments.clear()\n  // const comments = useLiveQuery(\n  //     () => db.comments.toArray()\n  // );\n  // console.log(comments)\n  // if (!comments) return null;\n\n\n  useEffect(() => {\n    db.comments.toArray().then(cmnts => {\n      actions.setStore(cmnts);\n    }).catch(error => {\n      alert(\"Ooops: \" + error);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_area,\n      children: state.cmnts ? state.cmnts.map(a => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: a.text\n        }, a.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      handleKey: handleKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.logOutClicked,\n      children: \"LOG OUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"j5lJrT36Q71iUpim/LAylmMogbg=\", false, function () {\n  return [useComments];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nirob/Desktop/rfh-chat/simplechat/src/Chat.js"],"names":["React","useRef","useEffect","classes","db","InputField","useComments","Chat","props","state","actions","v4","uuidv4","require","commandQueqe","workerInstance","worker","handleKey","inputVal","uuid","obj","type","cmnt","postMessage","op","value","current","push","console","log","onmessage","e","data","JSON","parse","filter","f","comments","toArray","then","cmnts","setStore","catch","error","alert","wrapper","chat_area","map","a","text","id","logOutClicked"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport classes from './Chat.module.css';\n\n// import { useLiveQuery } from \"dexie-react-hooks\";\n\nimport db from './Dexie/db';\n\nimport InputField from './InputField';\nimport { useComments } from './SweetState/SweetState';\n\nconst Chat = (props) => {\n    const [state, actions] = useComments();\n    \n    const { v4: uuidv4 } = require('uuid');\n\n    const commandQueqe = useRef([]);\n\n    const workerInstance = props.worker;\n\n    const handleKey = (inputVal) => {\n        let uuid = uuidv4();\n        let obj = {type: 'DISCUSSION_COMMENT_ADD_COMMAND', cmnt: inputVal, uuid: uuid};\n        workerInstance.postMessage({op:'add', value: obj});\n        commandQueqe.current.push(obj);\n        console.log(commandQueqe.current);\n    }\n\n    workerInstance.onmessage = e => {\n        let data = JSON.parse(e.data);\n        commandQueqe.current = commandQueqe.current.filter(f => f.uuid !== data.uuid);\n        db.comments.toArray().then((cmnts) => {\n            actions.setStore(cmnts);\n        }).catch((error)=> {\n        alert (\"Ooops: \" + error);\n        })\n        console.log(data.cmnt);\n        console.log(commandQueqe.current);\n    }\n\n    // db.comments.clear()\n\n    // const comments = useLiveQuery(\n    //     () => db.comments.toArray()\n    // );\n    // console.log(comments)\n    // if (!comments) return null;\n\n    useEffect(()=> {\n        db.comments.toArray().then((cmnts) => {\n          actions.setStore(cmnts);\n        }).catch((error)=> {\n          alert (\"Ooops: \" + error);\n        })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    return(\n        <div className={classes.wrapper}>\n            <div className={classes.chat_area}>\n                {\n                    state.cmnts ?\n                    state.cmnts.map((a)=> {\n                        return(\n                            <h4 key = {a.id}>{a.text}</h4>\n                        );\n                    })\n                    : null\n                }\n            </div>\n            <InputField handleKey={handleKey} />\n            <button onClick={props.logOutClicked}>LOG OUT</button>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}