{"ast":null,"code":"function addMethods(worker, methods) {\n  var c = 0;\n  var callbacks = {};\n  worker.addEventListener('message', function (e) {\n    var d = e.data;\n    if (d.type !== 'RPC') return;\n\n    if (d.id) {\n      var f = callbacks[d.id];\n\n      if (f) {\n        delete callbacks[d.id];\n\n        if (d.error) {\n          f[1](Object.assign(Error(d.error.message), d.error));\n        } else {\n          f[0](d.result);\n        }\n      }\n    } else {\n      var evt = document.createEvent('Event');\n      evt.initEvent(d.method, false, false);\n      evt.data = d.params;\n      worker.dispatchEvent(evt);\n    }\n  });\n  methods.forEach(function (method) {\n    worker[method] = function () {\n      var _arguments = arguments;\n      return new Promise(function (a, b) {\n        var id = ++c;\n        callbacks[id] = [a, b];\n        worker.postMessage({\n          type: 'RPC',\n          id: id,\n          method: method,\n          params: [].slice.call(_arguments)\n        });\n      });\n    };\n  });\n}\n\nmodule.exports = addMethods;","map":{"version":3,"sources":["../src/rpc-wrapper.js"],"names":["c","callbacks","worker","d","e","f","Object","Error","evt","document","methods","id","type","method","params"],"mappings":"AAAe,SAAA,UAAA,CAAA,MAAA,EAAA,OAAA,EAAqC;AACnD,MAAIA,CAAC,GAAL,CAAA;AACA,MAAIC,SAAS,GAAb,EAAA;AACAC,EAAAA,MAAM,CAANA,gBAAAA,CAAAA,SAAAA,EAAmC,UAAA,CAAA,EAAO;AACzC,QAAIC,CAAC,GAAGC,CAAC,CAAT,IAAA;AACA,QAAID,CAAC,CAADA,IAAAA,KAAJ,KAAA,EAAoB;;AACpB,QAAIA,CAAC,CAAL,EAAA,EAAU;AACT,UAAIE,CAAC,GAAGJ,SAAS,CAACE,CAAC,CAAnB,EAAiB,CAAjB;;AACA,UAAA,CAAA,EAAO;AACN,eAAOF,SAAS,CAACE,CAAC,CAAlB,EAAgB,CAAhB;;AACA,YAAIA,CAAC,CAAL,KAAA,EAAa;AACZE,UAAAA,CAAC,CAADA,CAAC,CAADA,CAAKC,MAAM,CAANA,MAAAA,CAAcC,KAAK,CAACJ,CAAC,CAADA,KAAAA,CAApBG,OAAmB,CAAnBA,EAAsCH,CAAC,CAA5CE,KAAKC,CAALD;AADD,SAAA,MAGK;AACJA,UAAAA,CAAC,CAADA,CAAC,CAADA,CAAKF,CAAC,CAANE,MAAAA;AACA;AACD;AAVF,KAAA,MAYK;AACJ,UAAIG,GAAG,GAAGC,QAAQ,CAARA,WAAAA,CAAV,OAAUA,CAAV;AACAD,MAAAA,GAAG,CAAHA,SAAAA,CAAcL,CAAC,CAAfK,MAAAA,EAAAA,KAAAA,EAAAA,KAAAA;AACAA,MAAAA,GAAG,CAAHA,IAAAA,GAAWL,CAAC,CAAZK,MAAAA;AACAN,MAAAA,MAAM,CAANA,aAAAA,CAAAA,GAAAA;AACA;AApBFA,GAAAA;AAsBAQ,EAAAA,OAAO,CAAPA,OAAAA,CAAiB,UAAA,MAAA,EAAU;AAC1BR,IAAAA,MAAM,CAANA,MAAM,CAANA,GAAiB,YAAA;AAAA,UAAA,UAAA,GAAA,SAAA;AAAA,aAAe,IAAA,OAAA,CAAa,UAAA,CAAA,EAAA,CAAA,EAAU;AACtD,YAAIS,EAAE,GAAG,EAAT,CAAA;AACAV,QAAAA,SAAS,CAATA,EAAS,CAATA,GAAgB,CAAA,CAAA,EAAhBA,CAAgB,CAAhBA;AACAC,QAAAA,MAAM,CAANA,WAAAA,CAAmB;AAAEU,UAAAA,IAAI,EAAN,KAAA;AAAeD,UAAAA,EAAE,EAAjB,EAAA;AAAmBE,UAAAA,MAAM,EAAzB,MAAA;AAA2BC,UAAAA,MAAM,EAAA,GAAA,KAAA,CAAA,IAAA,CAAA,UAAA;AAAjC,SAAnBZ;AAHgB,OAAe,CAAf;AAAjBA,KAAAA;AADDQ,GAAAA;AAOA","sourcesContent":["export default function addMethods(worker, methods) {\n\tlet c = 0;\n\tlet callbacks = {};\n\tworker.addEventListener('message', (e) => {\n\t\tlet d = e.data;\n\t\tif (d.type!=='RPC') return;\n\t\tif (d.id) {\n\t\t\tlet f = callbacks[d.id];\n\t\t\tif (f) {\n\t\t\t\tdelete callbacks[d.id];\n\t\t\t\tif (d.error) {\n\t\t\t\t\tf[1](Object.assign(Error(d.error.message), d.error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[0](d.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet evt = document.createEvent('Event');\n\t\t\tevt.initEvent(d.method, false, false);\n\t\t\tevt.data = d.params;\n\t\t\tworker.dispatchEvent(evt);\n\t\t}\n\t});\n\tmethods.forEach( method => {\n\t\tworker[method] = (...params) => new Promise( (a, b) => {\n\t\t\tlet id = ++c;\n\t\t\tcallbacks[id] = [a, b];\n\t\t\tworker.postMessage({ type: 'RPC', id, method, params });\n\t\t});\n\t});\n}\n"]},"metadata":{},"sourceType":"script"}