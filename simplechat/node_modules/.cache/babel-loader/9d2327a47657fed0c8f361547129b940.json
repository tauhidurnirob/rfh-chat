{"ast":null,"code":"import { createStore, createHook } from 'react-sweet-state';\nconst Store = createStore({\n  initialState: {\n    cmnts: []\n  },\n  actions: {\n    setStore: newState => ({\n      setState\n    }) => {\n      setState({\n        cmnts: newState\n      });\n    },\n    setCmnts: newState => ({\n      setState,\n      getState\n    }) => {\n      const {\n        cmnts\n      } = getState();\n      setState({\n        cmnts: [...cmnts, newState]\n      });\n    },\n    removeItems: id => ({\n      setState,\n      getState\n    }) => {\n      let {\n        items\n      } = getState();\n      items = items.filter(f => f.id !== id);\n      setState({\n        items: items\n      });\n    }\n  }\n});\nexport const useComments = createHook(Store);","map":{"version":3,"sources":["/Users/nirob/Desktop/rfh-chat/simplechat/src/SweetState/SweetState.js"],"names":["createStore","createHook","Store","initialState","cmnts","actions","setStore","newState","setState","setCmnts","getState","removeItems","id","items","filter","f","useComments"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,mBAAxC;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GADU;AAIxBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAGC,QAAD,IAAc,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACtCA,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,KAAK,EAAEG;AADF,OAAD,CAAR;AAGH,KALM;AAMPE,IAAAA,QAAQ,EAAGF,QAAD,IAAc,CAAC;AAAEC,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAD,KAA4B;AAChD,YAAM;AAAEN,QAAAA;AAAF,UAAYM,QAAQ,EAA1B;AACAF,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWG,QAAX;AADA,OAAD,CAAR;AAGH,KAXM;AAYPI,IAAAA,WAAW,EAAGC,EAAD,IAAQ,CAAC;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAD,KAA4B;AAC7C,UAAI;AAAEG,QAAAA;AAAF,UAAYH,QAAQ,EAAxB;AACAG,MAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAcC,CAAD,IAAMA,CAAC,CAACH,EAAF,KAASA,EAA5B,CAAR;AACAJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,KAAK,EAAEA;AAAT,OAAD,CAAR;AACH;AAhBM;AAJe,CAAD,CAAzB;AAwBA,OAAO,MAAMG,WAAW,GAAGf,UAAU,CAACC,KAAD,CAA9B","sourcesContent":["import { createStore, createHook } from 'react-sweet-state';\n\nconst Store = createStore({\n  initialState: {\n    cmnts: []\n  },\n  actions: {\n    setStore: (newState) => ({ setState }) => {\n        setState({\n            cmnts: newState\n        });\n    },\n    setCmnts: (newState) => ({ setState, getState }) => {\n        const { cmnts } = getState();\n        setState({\n          cmnts: [...cmnts, newState]\n        });\n    },\n    removeItems: (id) => ({ setState, getState }) => {\n        let { items } = getState();\n        items = items.filter((f)=> f.id !== id)\n        setState({ items: items });\n    }\n  }\n});\n\nexport const useComments = createHook(Store);"]},"metadata":{},"sourceType":"module"}