{"ast":null,"code":"import defaults from '../defaults';\n\nconst namedMutator = (storeState, actionName) => (...arg) => {\n  storeState.mutator.actionName = actionName;\n  return storeState.mutator(...arg);\n};\n\nexport const bindAction = (storeState, actionFn, actionKey, getContainerProps = () => {}, boundActions = {}) => {\n  // Setting mutator name so we can log action name for better debuggability\n  const dispatch = (thunkFn, actionName = `${actionKey}.dispatch`) => thunkFn({\n    setState: defaults.devtools ? namedMutator(storeState, actionName) : storeState.mutator,\n    getState: storeState.getState,\n    actions: boundActions,\n    dispatch\n  }, getContainerProps());\n\n  return (...args) => dispatch(actionFn(...args), actionKey);\n};\nexport const bindActions = (actions, storeState, getContainerProps = () => ({}), boundActions = null) => Object.keys(actions).reduce((acc, k) => {\n  acc[k] = bindAction(storeState, actions[k], k, getContainerProps, boundActions || acc);\n  return acc;\n}, {});","map":{"version":3,"sources":["/Users/nirob/Desktop/rfh-chat/simplechat/node_modules/react-sweet-state/lib/esm/store/bind-actions.js"],"names":["defaults","namedMutator","storeState","actionName","arg","mutator","bindAction","actionFn","actionKey","getContainerProps","boundActions","dispatch","thunkFn","setState","devtools","getState","actions","args","bindActions","Object","keys","reduce","acc","k"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA4B,CAAC,GAAGC,GAAJ,KAAY;AAC3DF,EAAAA,UAAU,CAACG,OAAX,CAAmBF,UAAnB,GAAgCA,UAAhC;AACA,SAAOD,UAAU,CAACG,OAAX,CAAmB,GAAGD,GAAtB,CAAP;AACD,CAHD;;AAKA,OAAO,MAAME,UAAU,GAAG,CAACJ,UAAD,EAAaK,QAAb,EAAuBC,SAAvB,EAAkCC,iBAAiB,GAAG,MAAM,CAAE,CAA9D,EAAgEC,YAAY,GAAG,EAA/E,KAAsF;AAC9G;AACA,QAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUT,UAAU,GAAI,GAAEK,SAAU,WAApC,KAAmDI,OAAO,CAAC;AAC1EC,IAAAA,QAAQ,EAAEb,QAAQ,CAACc,QAAT,GAAoBb,YAAY,CAACC,UAAD,EAAaC,UAAb,CAAhC,GAA2DD,UAAU,CAACG,OADN;AAE1EU,IAAAA,QAAQ,EAAEb,UAAU,CAACa,QAFqD;AAG1EC,IAAAA,OAAO,EAAEN,YAHiE;AAI1EC,IAAAA;AAJ0E,GAAD,EAKxEF,iBAAiB,EALuD,CAA3E;;AAOA,SAAO,CAAC,GAAGQ,IAAJ,KAAaN,QAAQ,CAACJ,QAAQ,CAAC,GAAGU,IAAJ,CAAT,EAAoBT,SAApB,CAA5B;AACD,CAVM;AAWP,OAAO,MAAMU,WAAW,GAAG,CAACF,OAAD,EAAUd,UAAV,EAAsBO,iBAAiB,GAAG,OAAO,EAAP,CAA1C,EAAsDC,YAAY,GAAG,IAArE,KAA8ES,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,CAA4B,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC/ID,EAAAA,GAAG,CAACC,CAAD,CAAH,GAASjB,UAAU,CAACJ,UAAD,EAAac,OAAO,CAACO,CAAD,CAApB,EAAyBA,CAAzB,EAA4Bd,iBAA5B,EAA+CC,YAAY,IAAIY,GAA/D,CAAnB;AACA,SAAOA,GAAP;AACD,CAHwG,EAGtG,EAHsG,CAAlG","sourcesContent":["import defaults from '../defaults';\n\nconst namedMutator = (storeState, actionName) => (...arg) => {\n  storeState.mutator.actionName = actionName;\n  return storeState.mutator(...arg);\n};\n\nexport const bindAction = (storeState, actionFn, actionKey, getContainerProps = () => {}, boundActions = {}) => {\n  // Setting mutator name so we can log action name for better debuggability\n  const dispatch = (thunkFn, actionName = `${actionKey}.dispatch`) => thunkFn({\n    setState: defaults.devtools ? namedMutator(storeState, actionName) : storeState.mutator,\n    getState: storeState.getState,\n    actions: boundActions,\n    dispatch\n  }, getContainerProps());\n\n  return (...args) => dispatch(actionFn(...args), actionKey);\n};\nexport const bindActions = (actions, storeState, getContainerProps = () => ({}), boundActions = null) => Object.keys(actions).reduce((acc, k) => {\n  acc[k] = bindAction(storeState, actions[k], k, getContainerProps, boundActions || acc);\n  return acc;\n}, {});"]},"metadata":{},"sourceType":"module"}