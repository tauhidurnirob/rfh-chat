{"ast":null,"code":"import defaults from '../defaults';\n\nconst connectDevTools = (storeState, config) => {\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(Object.assign({\n    name: `Store ${storeState.key}`,\n    serialize: true\n  }, config));\n\n  devTools.init(storeState.getState());\n  devTools.subscribe(message => {\n    if (message.type === 'DISPATCH') {\n      switch (message.payload.type) {\n        case 'RESET':\n          storeState.resetState();\n          devTools.init(storeState.getState());\n          return;\n\n        case 'COMMIT':\n          devTools.init(storeState.getState());\n          return;\n\n        case 'ROLLBACK':\n          storeState.setState(JSON.parse(message.state));\n          devTools.init(storeState.getState());\n          return;\n\n        case 'JUMP_TO_STATE':\n        case 'JUMP_TO_ACTION':\n          storeState.setState(JSON.parse(message.state));\n          return;\n      }\n    } else if (message.type === 'ACTION') {\n      let action = JSON.parse(message.payload);\n      storeState.setState(action.payload);\n    }\n  });\n  return devTools;\n};\n\nconst withDevtools = createStoreState => (...args) => {\n  const storeState = createStoreState(...args);\n\n  if (defaults.devtools && window && window.__REDUX_DEVTOOLS_EXTENSION__) {\n    const origMutator = storeState.mutator;\n    let devTools;\n\n    const devtoolMutator = arg => {\n      const result = origMutator(arg);\n\n      try {\n        if (!devTools) {\n          const config = typeof defaults.devtools === 'function' ? defaults.devtools(storeState) : {};\n          devTools = connectDevTools(storeState, config);\n        }\n\n        devTools.send({\n          type: storeState.mutator.actionName,\n          payload: arg\n        }, storeState.getState(), {}, storeState.key);\n      } catch (err) {\n        /* ignore devtools errors */\n      }\n\n      return result;\n    };\n\n    storeState.mutator = devtoolMutator;\n  }\n\n  return storeState;\n};\n\nexport default withDevtools;","map":{"version":3,"sources":["/Users/nirob/Desktop/rfh-chat/simplechat/node_modules/react-sweet-state/lib/esm/enhancers/devtools.js"],"names":["defaults","connectDevTools","storeState","config","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","connect","Object","assign","name","key","serialize","init","getState","subscribe","message","type","payload","resetState","setState","JSON","parse","state","action","withDevtools","createStoreState","args","devtools","origMutator","mutator","devtoolMutator","arg","result","send","actionName","err"],"mappings":"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","sourcesContent":["import defaults from '../defaults';\n\nconst connectDevTools = (storeState, config) => {\n  const devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(Object.assign({\n    name: `Store ${storeState.key}`,\n    serialize: true\n  }, config));\n\n  devTools.init(storeState.getState());\n  devTools.subscribe(message => {\n    if (message.type === 'DISPATCH') {\n      switch (message.payload.type) {\n        case 'RESET':\n          storeState.resetState();\n          devTools.init(storeState.getState());\n          return;\n\n        case 'COMMIT':\n          devTools.init(storeState.getState());\n          return;\n\n        case 'ROLLBACK':\n          storeState.setState(JSON.parse(message.state));\n          devTools.init(storeState.getState());\n          return;\n\n        case 'JUMP_TO_STATE':\n        case 'JUMP_TO_ACTION':\n          storeState.setState(JSON.parse(message.state));\n          return;\n      }\n    } else if (message.type === 'ACTION') {\n      let action = JSON.parse(message.payload);\n      storeState.setState(action.payload);\n    }\n  });\n  return devTools;\n};\n\nconst withDevtools = createStoreState => (...args) => {\n  const storeState = createStoreState(...args);\n\n  if (defaults.devtools && window && window.__REDUX_DEVTOOLS_EXTENSION__) {\n    const origMutator = storeState.mutator;\n    let devTools;\n\n    const devtoolMutator = arg => {\n      const result = origMutator(arg);\n\n      try {\n        if (!devTools) {\n          const config = typeof defaults.devtools === 'function' ? defaults.devtools(storeState) : {};\n          devTools = connectDevTools(storeState, config);\n        }\n\n        devTools.send({\n          type: storeState.mutator.actionName,\n          payload: arg\n        }, storeState.getState(), {}, storeState.key);\n      } catch (err) {\n        /* ignore devtools errors */\n      }\n\n      return result;\n    };\n\n    storeState.mutator = devtoolMutator;\n  }\n\n  return storeState;\n};\n\nexport default withDevtools;"]},"metadata":{},"sourceType":"module"}