{"ast":null,"code":"var _jsxFileName = \"/Users/nirob/Desktop/rfh-chat/simplechat/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport classes from './Chat.module.css';\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport db from './Dexie/db';\nimport worker from 'worker-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { useComments } from './SweetState/SweetState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const [state, actions] = useComments();\n  const [inputVal, setInputVal] = useState('');\n  const workerInstance = worker();\n\n  const {\n    v4: uuidv4\n  } = require('uuid');\n\n  const commandQueqe = useRef([]);\n\n  const inputOnChange = e => {\n    setInputVal(e.target.value);\n  };\n\n  const handleKey = event => {\n    if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n      event.preventDefault();\n      let uuid = uuidv4();\n      let obj = {\n        type: 'DISCUSSION_COMMENT_ADD_COMMAND',\n        cmnt: inputVal,\n        uuid: uuid\n      };\n      workerInstance.postMessage({\n        op: 'add',\n        value: obj\n      });\n      commandQueqe.current.push(obj);\n      console.log(commandQueqe.current);\n      setInputVal('');\n    }\n  };\n\n  workerInstance.onmessage = e => {\n    let data = JSON.parse(e.data);\n    commandQueqe.current = commandQueqe.current.filter(f => f.uuid !== data.uuid);\n    console.log(data.cmnt);\n    console.log(commandQueqe.current);\n  }; // db.comments.clear()\n  // const comments = useLiveQuery(\n  //     () => db.comments.toArray()\n  // );\n  // console.log(comments)\n  // useEffect(()=> {\n  //     db.comments.toArray().then((cmnts) => {\n  //       actions.setStore(cmnts);\n  //     }).catch((error)=> {\n  //       alert (\"Ooops: \" + error);\n  //     })\n  // },[actions])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_area,\n      children: state.cmnts ? state.cmnts.map(a => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: a.text\n        }, a.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: classes.input_field,\n      onChange: e => inputOnChange(e),\n      onKeyPress: e => handleKey(e),\n      value: inputVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"Fk7ZaMEG5pc7MT9h5HoQB6TBwmo=\", false, function () {\n  return [useComments];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nirob/Desktop/rfh-chat/simplechat/src/Chat.js"],"names":["React","useState","useRef","useEffect","classes","useLiveQuery","db","worker","useComments","Chat","state","actions","inputVal","setInputVal","workerInstance","v4","uuidv4","require","commandQueqe","inputOnChange","e","target","value","handleKey","event","code","preventDefault","uuid","obj","type","cmnt","postMessage","op","current","push","console","log","onmessage","data","JSON","parse","filter","f","wrapper","chat_area","cmnts","map","a","text","id","input_field"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAA6C;;AAC7C,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBH,WAAW,EAApC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMa,cAAc,GAAGP,MAAM,EAA7B;;AAEA,QAAM;AAAEQ,IAAAA,EAAE,EAAEC;AAAN,MAAiBC,OAAO,CAAC,MAAD,CAA9B;;AAEA,QAAMC,YAAY,GAAGhB,MAAM,CAAC,EAAD,CAA3B;;AAEA,QAAMiB,aAAa,GAAIC,CAAD,IAAO;AACzBP,IAAAA,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAIA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACC,IAAN,KAAe,aAA7C,EAA4D;AAC5DD,MAAAA,KAAK,CAACE,cAAN;AAEA,UAAIC,IAAI,GAAGX,MAAM,EAAjB;AACA,UAAIY,GAAG,GAAG;AAACC,QAAAA,IAAI,EAAE,gCAAP;AAAyCC,QAAAA,IAAI,EAAElB,QAA/C;AAAyDe,QAAAA,IAAI,EAAEA;AAA/D,OAAV;AACAb,MAAAA,cAAc,CAACiB,WAAf,CAA2B;AAACC,QAAAA,EAAE,EAAC,KAAJ;AAAWV,QAAAA,KAAK,EAAEM;AAAlB,OAA3B;AACAV,MAAAA,YAAY,CAACe,OAAb,CAAqBC,IAArB,CAA0BN,GAA1B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACe,OAAzB;AAEApB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACC;AACJ,GAZD;;AAcAC,EAAAA,cAAc,CAACuB,SAAf,GAA2BjB,CAAC,IAAI;AAC5B,QAAIkB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWpB,CAAC,CAACkB,IAAb,CAAX;AACApB,IAAAA,YAAY,CAACe,OAAb,GAAuBf,YAAY,CAACe,OAAb,CAAqBQ,MAArB,CAA4BC,CAAC,IAAIA,CAAC,CAACf,IAAF,KAAWW,IAAI,CAACX,IAAjD,CAAvB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACR,IAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACe,OAAzB;AACH,GALD,CA5Be,CAmCf;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAACuC,OAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEvC,OAAO,CAACwC,SAAxB;AAAA,gBAEQlC,KAAK,CAACmC,KAAN,GACAnC,KAAK,CAACmC,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,IAAM;AAClB,4BACI;AAAA,oBAAkBA,CAAC,CAACC;AAApB,WAAWD,CAAC,CAACE,EAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJD,CADA,GAME;AARV;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAE7C,OAAO,CAAC8C,WAAtC;AAAmD,MAAA,QAAQ,EAAG9B,CAAD,IAAMD,aAAa,CAACC,CAAD,CAAhF;AAAqF,MAAA,UAAU,EAAKA,CAAD,IAAMG,SAAS,CAACH,CAAD,CAAlH;AAAuH,MAAA,KAAK,EAAER;AAA9H;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlED;;GAAMH,I;UACuBD,W;;;KADvBC,I;AAoEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport classes from './Chat.module.css';\n\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nimport db from './Dexie/db';\n\nimport worker from 'worker-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { useComments } from './SweetState/SweetState';\n\nconst Chat = () => {\n    const [state, actions] = useComments();\n    const [inputVal, setInputVal] = useState('');\n\n    const workerInstance = worker();\n\n    const { v4: uuidv4 } = require('uuid');\n\n    const commandQueqe = useRef([]);\n\n    const inputOnChange = (e) => {\n        setInputVal(e.target.value);\n    }\n\n    const handleKey = (event) => {\n        if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        event.preventDefault();\n\n        let uuid = uuidv4();\n        let obj = {type: 'DISCUSSION_COMMENT_ADD_COMMAND', cmnt: inputVal, uuid: uuid};\n        workerInstance.postMessage({op:'add', value: obj});\n        commandQueqe.current.push(obj);\n        console.log(commandQueqe.current);\n\n        setInputVal('');\n        }\n    }\n\n    workerInstance.onmessage = e => {\n        let data = JSON.parse(e.data);\n        commandQueqe.current = commandQueqe.current.filter(f => f.uuid !== data.uuid);\n        console.log(data.cmnt);\n        console.log(commandQueqe.current)\n    }\n\n    // db.comments.clear()\n\n    // const comments = useLiveQuery(\n    //     () => db.comments.toArray()\n    // );\n    // console.log(comments)\n\n    // useEffect(()=> {\n    //     db.comments.toArray().then((cmnts) => {\n    //       actions.setStore(cmnts);\n    //     }).catch((error)=> {\n    //       alert (\"Ooops: \" + error);\n    //     })\n    // },[actions])\n\n    return(\n        <div className={classes.wrapper}>\n            <div className={classes.chat_area}>\n                {\n                    state.cmnts ?\n                    state.cmnts.map((a)=> {\n                        return(\n                            <h4 key = {a.id}>{a.text}</h4>\n                        );\n                    })\n                    : null\n                }\n            </div>\n            <input type=\"text\" className={classes.input_field} onChange={(e)=> inputOnChange(e)} onKeyPress = {(e)=> handleKey(e)} value={inputVal} />\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}