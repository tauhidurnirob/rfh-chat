{"ast":null,"code":"var _jsxFileName = \"/Users/nirob/Desktop/rfh-chat/simplechat/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport classes from './Chat.module.css';\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport db from './Dexie/db';\nimport worker from 'worker-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport InputField from './InputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ws = new WebSocket(\"ws://localhost:3000\");\n\nconst Chat = () => {\n  _s();\n\n  const workerInstance = worker();\n\n  const {\n    v4: uuidv4\n  } = require('uuid');\n\n  const commandQueqe = useRef([]);\n\n  const handleKey = inputVal => {\n    let uuid = uuidv4();\n    let obj = {\n      type: 'DISCUSSION_COMMENT_ADD_COMMAND',\n      cmnt: inputVal,\n      uuid: uuid\n    };\n    workerInstance.postMessage({\n      op: 'add',\n      value: obj\n    });\n    commandQueqe.current.push(obj);\n    console.log(commandQueqe.current);\n  };\n\n  workerInstance.onmessage = e => {\n    let data = JSON.parse(e.data);\n    commandQueqe.current = commandQueqe.current.filter(f => f.uuid !== data.uuid);\n    console.log(data.cmnt);\n    console.log(commandQueqe.current);\n  }; // db.comments.clear()\n\n\n  const comments = useLiveQuery(() => db.comments.toArray());\n  console.log(comments); // const [comments, setComments] = useState();\n  // useEffect(()=> {\n  //     db.comments.toArray().then((cmnts) => {\n  //       actions.setStore(cmnts);\n  //       setComments(cmnts);\n  //     }).catch((error)=> {\n  //       alert (\"Ooops: \" + error);\n  //     })\n  // },[actions, comments])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_area,\n      children: comments ? comments.map(a => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: a.text\n        }, a.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      handleKey: handleKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"6lCE43ozdFNhkOJjjRfi/2LAuJQ=\", false, function () {\n  return [useLiveQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nirob/Desktop/rfh-chat/simplechat/src/Chat.js"],"names":["React","useRef","classes","useLiveQuery","db","worker","InputField","ws","WebSocket","Chat","workerInstance","v4","uuidv4","require","commandQueqe","handleKey","inputVal","uuid","obj","type","cmnt","postMessage","op","value","current","push","console","log","onmessage","e","data","JSON","parse","filter","f","comments","toArray","wrapper","chat_area","map","a","text","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAA6C;;AAC7C,OAAOC,UAAP,MAAuB,cAAvB;;AACA,OAAO,MAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAX;;AAEP,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAMC,cAAc,GAAGL,MAAM,EAA7B;;AAEA,QAAM;AAAEM,IAAAA,EAAE,EAAEC;AAAN,MAAiBC,OAAO,CAAC,MAAD,CAA9B;;AAEA,QAAMC,YAAY,GAAGb,MAAM,CAAC,EAAD,CAA3B;;AAEA,QAAMc,SAAS,GAAIC,QAAD,IAAc;AAC5B,QAAIC,IAAI,GAAGL,MAAM,EAAjB;AACA,QAAIM,GAAG,GAAG;AAACC,MAAAA,IAAI,EAAE,gCAAP;AAAyCC,MAAAA,IAAI,EAAEJ,QAA/C;AAAyDC,MAAAA,IAAI,EAAEA;AAA/D,KAAV;AACAP,IAAAA,cAAc,CAACW,WAAf,CAA2B;AAACC,MAAAA,EAAE,EAAC,KAAJ;AAAWC,MAAAA,KAAK,EAAEL;AAAlB,KAA3B;AACAJ,IAAAA,YAAY,CAACU,OAAb,CAAqBC,IAArB,CAA0BP,GAA1B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYb,YAAY,CAACU,OAAzB;AACH,GAND;;AAQAd,EAAAA,cAAc,CAACkB,SAAf,GAA2BC,CAAC,IAAI;AAC5B,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACC,IAAb,CAAX;AACAhB,IAAAA,YAAY,CAACU,OAAb,GAAuBV,YAAY,CAACU,OAAb,CAAqBS,MAArB,CAA4BC,CAAC,IAAIA,CAAC,CAACjB,IAAF,KAAWa,IAAI,CAACb,IAAjD,CAAvB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACV,IAAjB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYb,YAAY,CAACU,OAAzB;AACH,GALD,CAhBe,CAuBf;;;AAEA,QAAMW,QAAQ,GAAGhC,YAAY,CACzB,MAAMC,EAAE,CAAC+B,QAAH,CAAYC,OAAZ,EADmB,CAA7B;AAGAV,EAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EA5Be,CA8Bf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACmC,OAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEnC,OAAO,CAACoC,SAAxB;AAAA,gBAEQH,QAAQ,GACRA,QAAQ,CAACI,GAAT,CAAcC,CAAD,IAAM;AACf,4BACI;AAAA,oBAAkBA,CAAC,CAACC;AAApB,WAAWD,CAAC,CAACE,EAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJD,CADQ,GAMN;AARV;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAE3B;AAAvB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxDD;;GAAMN,I;UAyBeN,Y;;;KAzBfM,I;AA0DN,eAAeA,IAAf","sourcesContent":["import React, { useRef } from 'react';\n\nimport classes from './Chat.module.css';\n\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nimport db from './Dexie/db';\n\nimport worker from 'worker-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport InputField from './InputField';\nexport const ws = new WebSocket(\"ws://localhost:3000\");\n\nconst Chat = () => {\n\n    const workerInstance = worker();\n\n    const { v4: uuidv4 } = require('uuid');\n\n    const commandQueqe = useRef([]);\n\n    const handleKey = (inputVal) => {\n        let uuid = uuidv4();\n        let obj = {type: 'DISCUSSION_COMMENT_ADD_COMMAND', cmnt: inputVal, uuid: uuid};\n        workerInstance.postMessage({op:'add', value: obj});\n        commandQueqe.current.push(obj);\n        console.log(commandQueqe.current);\n    }\n\n    workerInstance.onmessage = e => {\n        let data = JSON.parse(e.data);\n        commandQueqe.current = commandQueqe.current.filter(f => f.uuid !== data.uuid);\n        console.log(data.cmnt);\n        console.log(commandQueqe.current);\n    }\n\n    // db.comments.clear()\n\n    const comments = useLiveQuery(\n        () => db.comments.toArray()\n    );\n    console.log(comments)\n\n    // const [comments, setComments] = useState();\n    // useEffect(()=> {\n    //     db.comments.toArray().then((cmnts) => {\n    //       actions.setStore(cmnts);\n    //       setComments(cmnts);\n    //     }).catch((error)=> {\n    //       alert (\"Ooops: \" + error);\n    //     })\n    // },[actions, comments])\n\n    return(\n        <div className={classes.wrapper}>\n            <div className={classes.chat_area}>\n                {\n                    comments ?\n                    comments.map((a)=> {\n                        return(\n                            <h4 key = {a.id}>{a.text}</h4>\n                        );\n                    })\n                    : null\n                }\n            </div>\n            <InputField handleKey={handleKey} />\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}